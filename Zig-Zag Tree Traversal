vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
    vector<vector<int>> result;  // Change the return type of the function

    if (root == NULL) {
        return result;
    }

    queue<TreeNode*> q;
    q.push(root);
    bool LtR = true;

    while (!q.empty()) {
        int size = q.size();
        vector<int> ans(size);

        for (int i = 0; i < size; i++) {
            TreeNode* front = q.front();
            q.pop();
            int index = LtR ? i : size - i - 1;
            ans[index] = front->data;

            if (front->left) {
                q.push(front->left);
            }

            if (front->right) {
                q.push(front->right);
            }
        }

        result.push_back(ans);
        LtR = !LtR;
    }

    return result;  // Return a vector of vectors
}
